apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.agx.agxjetpackmvvmtest"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构 一般只设置这个就阔以设配所有的设备了，还可以极大的减少apk的大小
            abiFilters 'armeabi'
        }
    }
    buildFeatures {
        dataBinding = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true//开启混淆
            shrinkResources true
            zipAlignEnabled true//去除无用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
        preDexLibraries = false
        additionalParameters = [
                '--multi-dex',//多分包
                '--set-max-idx-number=60000'//每个包内方法数上限
        ]
    }
    allprojects {
        repositories {
            google()
            jcenter()
            maven {
                url "http://maven.aliyun.com/nexus/content/repositories/releases"
            }
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
            maven {
                url 'https://jitpack.io'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation project(path: ':JetpackMvvm')
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //BaseAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //状态界面管理库 https://github.com/KingJA/LoadSir
    implementation 'com.kingja.loadsir:loadsir:1.3.8'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //屏幕适配
    implementation 'me.jessyan:autosize:1.2.1'
    //util
    implementation 'com.blankj:utilcodex:1.26.0'
    //验证码输入框
    implementation 'com.justkiddingbaby:vercodeedittext:1.1.0'
    //https://github.com/li-xiaojun/XPopup
    implementation 'com.lxj:xpopup:2.0.8'
    //https://github.com/airbnb/lottie-android
    implementation "com.airbnb.android:lottie:3.4.1"
    // 基础依赖包，必须要依赖 https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    // fragment快速实现（可选）https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    //QMUI  https://qmuiteam.com/android/get-started
    implementation 'com.qmuiteam:qmui:2.0.0-alpha10'
}